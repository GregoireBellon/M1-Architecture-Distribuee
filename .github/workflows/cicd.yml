name: CICD

on:
  push:
  pull_request:
    branches: ["master", "dev"]

permissions:
  contents: read

env:
  # needs to be lowercase but github.repository_owner contains capital letters
  REGISTRY_NAME: "gregoirebellon"

jobs:
  build-thrift:
    permissions:
      packages: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io/${{ github.repository_owner }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: ./thrift
          tags: ghcr.io/${{ env.REGISTRY_NAME }}/thrift:${{ github.ref_name }}
          pull: true
          push: true
          file: ./docker/dockerfiles/Thrift/Dockerfile
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-internal:
    permissions:
      packages: write
    runs-on: ubuntu-latest
    needs: build-thrift
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io/${{ github.repository_owner }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: ./InternalCRM
          tags: ghcr.io/${{ env.REGISTRY_NAME }}/internal:${{ github.ref_name }}
          pull: true
          push: true
          file: ./docker/dockerfiles/InternalCRM/Dockerfile
          build-args: |
            BRANCH=${{ github.ref_name }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-virtual:
    permissions:
      packages: write
    runs-on: ubuntu-latest
    needs: build-thrift
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io/${{ github.repository_owner }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: ./VirtualCRM
          tags: ghcr.io/${{ env.REGISTRY_NAME }}/virtual:${{ github.ref_name }}
          pull: true
          push: true
          file: ./docker/dockerfiles/VirtualCRM/Dockerfile
          build-args: |
            BRANCH=${{ github.ref_name }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
  build-client:
    permissions:
      packages: write
    runs-on: ubuntu-latest
    needs: build-thrift
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io/${{ github.repository_owner }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: ./SimpleClient
          tags: ghcr.io/${{ env.REGISTRY_NAME }}/client:${{ github.ref_name }}
          pull: true
          push: true
          file: ./docker/dockerfiles/SimpleClient/Dockerfile
          build-args: |
            BRANCH=${{ github.ref_name }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
  test-internal:
    runs-on: ubuntu-latest
    needs: build-internal
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io/${{ github.repository_owner }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Test
        run: >
          REGISTRY_NAME=${{ env.REGISTRY_NAME }} 
          BRANCH=${{ github.ref_name }} 
          docker-compose -f ./docker/test/InternalCrm/docker-compose.yml up --exit-code-from internal
  test-virtual:
    runs-on: ubuntu-latest
    needs: build-virtual
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io/${{ github.repository_owner }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Test
        run: >
          REGISTRY_NAME=${{ env.REGISTRY_NAME }} 
          BRANCH=${{ github.ref_name }} 
          docker-compose -f ./docker/test/VirtualCrm/docker-compose.yml up --exit-code-from virtual
  test-client:
    runs-on: ubuntu-latest
    needs: build-client
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io/${{ github.repository_owner }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Test
        run: >
          REGISTRY_NAME=${{ env.REGISTRY_NAME }} 
          BRANCH=${{ github.ref_name }} 
          docker-compose -f ./docker/test/SimpleClient/docker-compose.yml up --exit-code-from client
  integration-virtual:
    runs-on: ubuntu-latest
    needs: [test-internal, test-virtual]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io/${{ github.repository_owner }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Test
        run: >
          REGISTRY_NAME=${{ env.REGISTRY_NAME }} 
          BRANCH=${{ github.ref_name }} 
          docker-compose -f ./docker/integration/VirtualCRM/docker-compose.yml up --exit-code-from virtual
  integration-client:
    runs-on: ubuntu-latest
    needs: [test-internal, test-client]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io/${{ github.repository_owner }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Test
        run: >
          REGISTRY_NAME=${{ env.REGISTRY_NAME }} 
          BRANCH=${{ github.ref_name }} 
          docker-compose -f ./docker/integration/SimpleClient/docker-compose.yml up --exit-code-from client
  build-prod-internal:
    permissions:
      packages: write
    runs-on: ubuntu-latest
    needs: [integration-client, integration-virtual]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io/${{ github.repository_owner }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: ./docker/dockerfiles/InternalCRM/
          tags: ghcr.io/${{ env.REGISTRY_NAME }}/internal-prod:${{ github.ref_name }}
          pull: true
          push: true
          file: ./docker/dockerfiles/InternalCRM/prod.Dockerfile
          build-args: |
            BRANCH=${{ github.ref_name }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-prod-virtual:
    permissions:
      packages: write
    runs-on: ubuntu-latest
    needs: [integration-client, integration-virtual]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io/${{ github.repository_owner }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: ./docker/dockerfiles/VirtualCRM
          tags: ghcr.io/${{ env.REGISTRY_NAME }}/virtual-prod:${{ github.ref_name }}
          pull: true
          push: true
          file: ./docker/dockerfiles/VirtualCRM/prod.Dockerfile
          build-args: |
            BRANCH=${{ github.ref_name }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
  build-prod-client:
    permissions:
      packages: write
    runs-on: ubuntu-latest
    needs: [integration-client, integration-virtual]
    container:
      image: ghcr.io/gregoirebellon/client:${{ github.ref_name }}
      credentials:
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Publish
        uses: actions/setup-node@v3
        with:
          node-version: "20.10.0"
          registry-url: "https://npm.pkg.github.com"
          scope: "@gregoirebellon"
      - run: npm publish /app
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
